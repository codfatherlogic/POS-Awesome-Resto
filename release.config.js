/* eslint-env node */
/* global module */

const dateFormatter = new Intl.DateTimeFormat("en-US", {
	year: "numeric",
	month: "long",
	day: "numeric",
});

module.exports = {
	branches: ["develop"],
	tagFormat: "${version}",
	plugins: [
		"@semantic-release/commit-analyzer",
		[
			"@semantic-release/release-notes-generator",
			{
				preset: "conventionalcommits",
				writerOpts: {
					headerPartial: "Release {{version}} — {{date}}",
					commitPartial:
						"- {{subject}} {{#if scope}}({{scope}}){{/if}} {{#if hash}}({{shortHash}}){{/if}} {{#if references}}— {{referencesString}}{{/if}}\\n",
					groupBy: "section",
					commitGroupsSort: (a, b) => {
						const order = [
							"✨ Features",
							"🐞 Bug Fixes",
							"⚡ Performance",
							"📝 Docs",
							"🧰 Maintenance",
						];
						return order.indexOf(a.title) - order.indexOf(b.title);
					},
					transform: (commit) => {
						const typeMap = {
							feat: "✨ Features",
							fix: "🐞 Bug Fixes",
							perf: "⚡ Performance",
							docs: "📝 Docs",
							refactor: "🧰 Maintenance",
							chore: "🧰 Maintenance",
							ci: "🧰 Maintenance",
							build: "🧰 Maintenance",
						};
						const section = typeMap[commit.type];
						if (!section) return;
						const shortHash = commit.hash ? commit.hash.substring(0, 7) : null;
						const referencesString = commit.references
							? commit.references.map((ref) => `#${ref.issue}`).join(", ")
							: undefined;
						const subject = commit.subject
							? commit.subject.replace(/\(#\d+\)/g, "").trim()
							: undefined;

						return {
							...commit,
							section,
							shortHash,
							...(referencesString && {
								referencesString,
							}),
							...(subject && { subject }),
						};
					},
					finalizeContext: (context) => {
						const date = new Date(context.date);
						const formattedDate = dateFormatter.format(date);
						return {
							...context,
							date: formattedDate,
						};
					},
					mainTemplate:
						"{{> header}}\\n\\n{{#each commitGroups}}\\n### {{title}}\\n{{#each commits}}{{> commit root=@root}}{{/each}}_Total: {{commits.length}} changes_\\n\\n{{/each}}{{#if noteGroups}}\\n{{#each noteGroups}}\\n### {{title}}\\n{{#each notes}}\\n- {{text}}\\n{{/each}}\\n{{/each}}\\n{{/if}}\\n— Changelog auto-generated by semantic-release. Thanks to all contributors! 🙌\\n",
				},
			},
		],
		[
			"@semantic-release/changelog",
			{
				changelogFile: "CHANGELOG.md",
				changelogTitle: "# Changelog\n\nAll notable changes.",
			},
		],
		[
			"@semantic-release/exec",
			{
				prepareCmd: "python scripts/update_version.py ${nextRelease.version}",
			},
		],
		[
			"@semantic-release/git",
			{
				assets: ["CHANGELOG.md", "package.json", "yarn.lock", "posawesome/__init__.py"],
				message:
					"Release: v${nextRelease.version} — ${new Date().toISOString().slice(0, 10)}\n\n${nextRelease.notes}\n",
			},
		],
		"@semantic-release/github",
	],
};
